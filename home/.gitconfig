[user]
  name = superwf
  email = superwf@gmail.com
[core]
  autocrlf = false
  eol = lf
  editor = vi
  pager = less
[merge]
  tool = vimdiff
[color]
  ui = true
[alias]
  ci = commit
  co = checkout
  unstage = reset HEAD
  last = log -1 HEAD
  amend = commit --amend
  merged = branch --merged
  unmerged = branch --no-merged
  rm-cache = rm --cache
  log-last = log -1

  ; only use when has committed wrong file
  remove-from-history = "!f() { \
    git filter-branch --index-filter \"git rm -rf --cached --ignore-unmatch $1\" HEAD; \
    rm -rf .git/refs/original/ && git reflog expire --all &&  git gc --aggressive --prune; \
  }; f"

  changelog =  "!f() { \
    CHANGELOG='CHANGELOG.md'; \
    DATE=`date +'%B %d, %Y'`; \
    PROJECT=`cat $CHANGELOG | egrep '^# (\\w+)' | sed -e 's/^# \\([a-zA-Z]*\\).*/\\1/' | head -n 1`; \
    HEAD=\"# $PROJECT ($DATE)\"; \
    version=`git for-each-ref refs/tags --sort='-*authordate' --format='%(refname)' --count=1 | sed 's/^refs\\/tags\\///'`; \
    tmp='/tmp/changelog'; \
    echo $HEAD > $tmp; \
    if test -z \"$version\"; then \
      git log --pretty=\"format:* %s\" >> $tmp; \
    else \
      git log --pretty=\"format:* %s\" $version..  >> $tmp; \
    fi; \
    echo '\n' >> $tmp; \
    if [ -f $CHANGELOG ]; then cat $CHANGELOG >> $tmp; fi; \
    mv $tmp $CHANGELOG; \
    test -n \"$EDITOR\" && $EDITOR $CHANGELOG; \
  }; f"

  submodule-init = "git submodule update --init --recursive;"

  remove-remote-branch =  "!f() { \
    branch=$1; \
    test -z $branch && echo \"branch required.\" 1>&2 && exit 1; \
    git push origin :$branch; \
  }; f"

  log-graph = "log --graph --pretty=format:'%h - %d %s (%cr) <%an>'"

  view-commit = "!f() { \
    commit=$1; \
    git show $commit | vi -R -; \
  }; f"

[credential]
  helper = store
[push]
	followTags = true
